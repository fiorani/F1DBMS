#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace F1DBMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="F1")]
	public partial class DataClassesF1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertvetture(vetture instance);
    partial void Updatevetture(vetture instance);
    partial void Deletevetture(vetture instance);
    partial void Insertadesioni(adesioni instance);
    partial void Updateadesioni(adesioni instance);
    partial void Deleteadesioni(adesioni instance);
    partial void Insertcampionati(campionati instance);
    partial void Updatecampionati(campionati instance);
    partial void Deletecampionati(campionati instance);
    partial void Insertcircuiti(circuiti instance);
    partial void Updatecircuiti(circuiti instance);
    partial void Deletecircuiti(circuiti instance);
    partial void Insertclassifiche_piloti(classifiche_piloti instance);
    partial void Updateclassifiche_piloti(classifiche_piloti instance);
    partial void Deleteclassifiche_piloti(classifiche_piloti instance);
    partial void Insertcomponenti(componenti instance);
    partial void Updatecomponenti(componenti instance);
    partial void Deletecomponenti(componenti instance);
    partial void Insertcomposizioni(composizioni instance);
    partial void Updatecomposizioni(composizioni instance);
    partial void Deletecomposizioni(composizioni instance);
    partial void Insertcontratti(contratti instance);
    partial void Updatecontratti(contratti instance);
    partial void Deletecontratti(contratti instance);
    partial void Insertdipendenti(dipendenti instance);
    partial void Updatedipendenti(dipendenti instance);
    partial void Deletedipendenti(dipendenti instance);
    partial void Insertgare(gare instance);
    partial void Updategare(gare instance);
    partial void Deletegare(gare instance);
    partial void Insertincarichi_dipendenti(incarichi_dipendenti instance);
    partial void Updateincarichi_dipendenti(incarichi_dipendenti instance);
    partial void Deleteincarichi_dipendenti(incarichi_dipendenti instance);
    partial void Insertincarichi_piloti(incarichi_piloti instance);
    partial void Updateincarichi_piloti(incarichi_piloti instance);
    partial void Deleteincarichi_piloti(incarichi_piloti instance);
    partial void Insertmail_sponsor(mail_sponsor instance);
    partial void Updatemail_sponsor(mail_sponsor instance);
    partial void Deletemail_sponsor(mail_sponsor instance);
    partial void Insertmail_team(mail_team instance);
    partial void Updatemail_team(mail_team instance);
    partial void Deletemail_team(mail_team instance);
    partial void Insertpartecipazioni_piloti(partecipazioni_piloti instance);
    partial void Updatepartecipazioni_piloti(partecipazioni_piloti instance);
    partial void Deletepartecipazioni_piloti(partecipazioni_piloti instance);
    partial void Insertpiloti(piloti instance);
    partial void Updatepiloti(piloti instance);
    partial void Deletepiloti(piloti instance);
    partial void Insertrecapiti_dipendenti(recapiti_dipendenti instance);
    partial void Updaterecapiti_dipendenti(recapiti_dipendenti instance);
    partial void Deleterecapiti_dipendenti(recapiti_dipendenti instance);
    partial void Insertrecapiti_piloti(recapiti_piloti instance);
    partial void Updaterecapiti_piloti(recapiti_piloti instance);
    partial void Deleterecapiti_piloti(recapiti_piloti instance);
    partial void Insertrecapiti_sponsor(recapiti_sponsor instance);
    partial void Updaterecapiti_sponsor(recapiti_sponsor instance);
    partial void Deleterecapiti_sponsor(recapiti_sponsor instance);
    partial void Insertrecapiti_team(recapiti_team instance);
    partial void Updaterecapiti_team(recapiti_team instance);
    partial void Deleterecapiti_team(recapiti_team instance);
    partial void Insertsponsor(sponsor instance);
    partial void Updatesponsor(sponsor instance);
    partial void Deletesponsor(sponsor instance);
    partial void Insertteam(team instance);
    partial void Updateteam(team instance);
    partial void Deleteteam(team instance);
    #endregion
		
		public DataClassesF1DataContext() : 
				base(global::F1DBMS.Properties.Settings.Default.F1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesF1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesF1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesF1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesF1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vetture> vettures
		{
			get
			{
				return this.GetTable<vetture>();
			}
		}
		
		public System.Data.Linq.Table<adesioni> adesionis
		{
			get
			{
				return this.GetTable<adesioni>();
			}
		}
		
		public System.Data.Linq.Table<campionati> campionatis
		{
			get
			{
				return this.GetTable<campionati>();
			}
		}
		
		public System.Data.Linq.Table<circuiti> circuitis
		{
			get
			{
				return this.GetTable<circuiti>();
			}
		}
		
		public System.Data.Linq.Table<classifiche_piloti> classifiche_pilotis
		{
			get
			{
				return this.GetTable<classifiche_piloti>();
			}
		}
		
		public System.Data.Linq.Table<componenti> componentis
		{
			get
			{
				return this.GetTable<componenti>();
			}
		}
		
		public System.Data.Linq.Table<composizioni> composizionis
		{
			get
			{
				return this.GetTable<composizioni>();
			}
		}
		
		public System.Data.Linq.Table<contratti> contrattis
		{
			get
			{
				return this.GetTable<contratti>();
			}
		}
		
		public System.Data.Linq.Table<dipendenti> dipendentis
		{
			get
			{
				return this.GetTable<dipendenti>();
			}
		}
		
		public System.Data.Linq.Table<gare> gares
		{
			get
			{
				return this.GetTable<gare>();
			}
		}
		
		public System.Data.Linq.Table<incarichi_dipendenti> incarichi_dipendentis
		{
			get
			{
				return this.GetTable<incarichi_dipendenti>();
			}
		}
		
		public System.Data.Linq.Table<incarichi_piloti> incarichi_pilotis
		{
			get
			{
				return this.GetTable<incarichi_piloti>();
			}
		}
		
		public System.Data.Linq.Table<mail_sponsor> mail_sponsors
		{
			get
			{
				return this.GetTable<mail_sponsor>();
			}
		}
		
		public System.Data.Linq.Table<mail_team> mail_teams
		{
			get
			{
				return this.GetTable<mail_team>();
			}
		}
		
		public System.Data.Linq.Table<partecipazioni_piloti> partecipazioni_pilotis
		{
			get
			{
				return this.GetTable<partecipazioni_piloti>();
			}
		}
		
		public System.Data.Linq.Table<piloti> pilotis
		{
			get
			{
				return this.GetTable<piloti>();
			}
		}
		
		public System.Data.Linq.Table<recapiti_dipendenti> recapiti_dipendentis
		{
			get
			{
				return this.GetTable<recapiti_dipendenti>();
			}
		}
		
		public System.Data.Linq.Table<recapiti_piloti> recapiti_pilotis
		{
			get
			{
				return this.GetTable<recapiti_piloti>();
			}
		}
		
		public System.Data.Linq.Table<recapiti_sponsor> recapiti_sponsors
		{
			get
			{
				return this.GetTable<recapiti_sponsor>();
			}
		}
		
		public System.Data.Linq.Table<recapiti_team> recapiti_teams
		{
			get
			{
				return this.GetTable<recapiti_team>();
			}
		}
		
		public System.Data.Linq.Table<sponsor> sponsors
		{
			get
			{
				return this.GetTable<sponsor>();
			}
		}
		
		public System.Data.Linq.Table<team> teams
		{
			get
			{
				return this.GetTable<team>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.vetture")]
	public partial class vetture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nome;
		
		private string _IDVettura;
		
		private int _annoProduzione;
		
		private string _IDTeam;
		
		private EntitySet<composizioni> _composizionis;
		
		private EntitySet<partecipazioni_piloti> _partecipazioni_pilotis;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnIDVetturaChanging(string value);
    partial void OnIDVetturaChanged();
    partial void OnannoProduzioneChanging(int value);
    partial void OnannoProduzioneChanged();
    partial void OnIDTeamChanging(string value);
    partial void OnIDTeamChanged();
    #endregion
		
		public vetture()
		{
			this._composizionis = new EntitySet<composizioni>(new Action<composizioni>(this.attach_composizionis), new Action<composizioni>(this.detach_composizionis));
			this._partecipazioni_pilotis = new EntitySet<partecipazioni_piloti>(new Action<partecipazioni_piloti>(this.attach_partecipazioni_pilotis), new Action<partecipazioni_piloti>(this.detach_partecipazioni_pilotis));
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVettura", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDVettura
		{
			get
			{
				return this._IDVettura;
			}
			set
			{
				if ((this._IDVettura != value))
				{
					this.OnIDVetturaChanging(value);
					this.SendPropertyChanging();
					this._IDVettura = value;
					this.SendPropertyChanged("IDVettura");
					this.OnIDVetturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_annoProduzione", DbType="Int NOT NULL")]
		public int annoProduzione
		{
			get
			{
				return this._annoProduzione;
			}
			set
			{
				if ((this._annoProduzione != value))
				{
					this.OnannoProduzioneChanging(value);
					this.SendPropertyChanging();
					this._annoProduzione = value;
					this.SendPropertyChanged("annoProduzione");
					this.OnannoProduzioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTeam", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDTeam
		{
			get
			{
				return this._IDTeam;
			}
			set
			{
				if ((this._IDTeam != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTeamChanging(value);
					this.SendPropertyChanging();
					this._IDTeam = value;
					this.SendPropertyChanged("IDTeam");
					this.OnIDTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vetture_composizioni", Storage="_composizionis", ThisKey="IDVettura", OtherKey="IDVettura")]
		public EntitySet<composizioni> composizionis
		{
			get
			{
				return this._composizionis;
			}
			set
			{
				this._composizionis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vetture_partecipazioni_piloti", Storage="_partecipazioni_pilotis", ThisKey="IDVettura", OtherKey="IDVettura")]
		public EntitySet<partecipazioni_piloti> partecipazioni_pilotis
		{
			get
			{
				return this._partecipazioni_pilotis;
			}
			set
			{
				this._partecipazioni_pilotis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_vetture", Storage="_team", ThisKey="IDTeam", OtherKey="IDTeam", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.vettures.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.vettures.Add(this);
						this._IDTeam = value.IDTeam;
					}
					else
					{
						this._IDTeam = default(string);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_composizionis(composizioni entity)
		{
			this.SendPropertyChanging();
			entity.vetture = this;
		}
		
		private void detach_composizionis(composizioni entity)
		{
			this.SendPropertyChanging();
			entity.vetture = null;
		}
		
		private void attach_partecipazioni_pilotis(partecipazioni_piloti entity)
		{
			this.SendPropertyChanging();
			entity.vetture = this;
		}
		
		private void detach_partecipazioni_pilotis(partecipazioni_piloti entity)
		{
			this.SendPropertyChanging();
			entity.vetture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.adesioni")]
	public partial class adesioni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCampionato;
		
		private string _IDTeam;
		
		private EntityRef<campionati> _campionati;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCampionatoChanging(string value);
    partial void OnIDCampionatoChanged();
    partial void OnIDTeamChanging(string value);
    partial void OnIDTeamChanged();
    #endregion
		
		public adesioni()
		{
			this._campionati = default(EntityRef<campionati>);
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCampionato", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCampionato
		{
			get
			{
				return this._IDCampionato;
			}
			set
			{
				if ((this._IDCampionato != value))
				{
					if (this._campionati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCampionatoChanging(value);
					this.SendPropertyChanging();
					this._IDCampionato = value;
					this.SendPropertyChanged("IDCampionato");
					this.OnIDCampionatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTeam", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDTeam
		{
			get
			{
				return this._IDTeam;
			}
			set
			{
				if ((this._IDTeam != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTeamChanging(value);
					this.SendPropertyChanging();
					this._IDTeam = value;
					this.SendPropertyChanged("IDTeam");
					this.OnIDTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="campionati_adesioni", Storage="_campionati", ThisKey="IDCampionato", OtherKey="IDCampionato", IsForeignKey=true)]
		public campionati campionati
		{
			get
			{
				return this._campionati.Entity;
			}
			set
			{
				campionati previousValue = this._campionati.Entity;
				if (((previousValue != value) 
							|| (this._campionati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._campionati.Entity = null;
						previousValue.adesionis.Remove(this);
					}
					this._campionati.Entity = value;
					if ((value != null))
					{
						value.adesionis.Add(this);
						this._IDCampionato = value.IDCampionato;
					}
					else
					{
						this._IDCampionato = default(string);
					}
					this.SendPropertyChanged("campionati");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_adesioni", Storage="_team", ThisKey="IDTeam", OtherKey="IDTeam", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.adesionis.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.adesionis.Add(this);
						this._IDTeam = value.IDTeam;
					}
					else
					{
						this._IDTeam = default(string);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.campionati")]
	public partial class campionati : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCampionato;
		
		private int _anno;
		
		private string _nome;
		
		private string _descrizione;
		
		private EntitySet<adesioni> _adesionis;
		
		private EntitySet<gare> _gares;
		
		private EntitySet<partecipazioni_piloti> _partecipazioni_pilotis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCampionatoChanging(string value);
    partial void OnIDCampionatoChanged();
    partial void OnannoChanging(int value);
    partial void OnannoChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    #endregion
		
		public campionati()
		{
			this._adesionis = new EntitySet<adesioni>(new Action<adesioni>(this.attach_adesionis), new Action<adesioni>(this.detach_adesionis));
			this._gares = new EntitySet<gare>(new Action<gare>(this.attach_gares), new Action<gare>(this.detach_gares));
			this._partecipazioni_pilotis = new EntitySet<partecipazioni_piloti>(new Action<partecipazioni_piloti>(this.attach_partecipazioni_pilotis), new Action<partecipazioni_piloti>(this.detach_partecipazioni_pilotis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCampionato", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCampionato
		{
			get
			{
				return this._IDCampionato;
			}
			set
			{
				if ((this._IDCampionato != value))
				{
					this.OnIDCampionatoChanging(value);
					this.SendPropertyChanging();
					this._IDCampionato = value;
					this.SendPropertyChanged("IDCampionato");
					this.OnIDCampionatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anno", DbType="Int NOT NULL")]
		public int anno
		{
			get
			{
				return this._anno;
			}
			set
			{
				if ((this._anno != value))
				{
					this.OnannoChanging(value);
					this.SendPropertyChanging();
					this._anno = value;
					this.SendPropertyChanged("anno");
					this.OnannoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="campionati_adesioni", Storage="_adesionis", ThisKey="IDCampionato", OtherKey="IDCampionato")]
		public EntitySet<adesioni> adesionis
		{
			get
			{
				return this._adesionis;
			}
			set
			{
				this._adesionis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="campionati_gare", Storage="_gares", ThisKey="IDCampionato", OtherKey="IDCampionato")]
		public EntitySet<gare> gares
		{
			get
			{
				return this._gares;
			}
			set
			{
				this._gares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="campionati_partecipazioni_piloti", Storage="_partecipazioni_pilotis", ThisKey="IDCampionato", OtherKey="IDCampionato")]
		public EntitySet<partecipazioni_piloti> partecipazioni_pilotis
		{
			get
			{
				return this._partecipazioni_pilotis;
			}
			set
			{
				this._partecipazioni_pilotis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_adesionis(adesioni entity)
		{
			this.SendPropertyChanging();
			entity.campionati = this;
		}
		
		private void detach_adesionis(adesioni entity)
		{
			this.SendPropertyChanging();
			entity.campionati = null;
		}
		
		private void attach_gares(gare entity)
		{
			this.SendPropertyChanging();
			entity.campionati = this;
		}
		
		private void detach_gares(gare entity)
		{
			this.SendPropertyChanging();
			entity.campionati = null;
		}
		
		private void attach_partecipazioni_pilotis(partecipazioni_piloti entity)
		{
			this.SendPropertyChanging();
			entity.campionati = this;
		}
		
		private void detach_partecipazioni_pilotis(partecipazioni_piloti entity)
		{
			this.SendPropertyChanging();
			entity.campionati = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.circuiti")]
	public partial class circuiti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCircuito;
		
		private string _nome;
		
		private string _stato;
		
		private string _descrizione;
		
		private int _lunghezza;
		
		private string _tipologia;
		
		private int _numeroCurve;
		
		private EntitySet<gare> _gares;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCircuitoChanging(string value);
    partial void OnIDCircuitoChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnstatoChanging(string value);
    partial void OnstatoChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    partial void OnlunghezzaChanging(int value);
    partial void OnlunghezzaChanged();
    partial void OntipologiaChanging(string value);
    partial void OntipologiaChanged();
    partial void OnnumeroCurveChanging(int value);
    partial void OnnumeroCurveChanged();
    #endregion
		
		public circuiti()
		{
			this._gares = new EntitySet<gare>(new Action<gare>(this.attach_gares), new Action<gare>(this.detach_gares));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCircuito", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCircuito
		{
			get
			{
				return this._IDCircuito;
			}
			set
			{
				if ((this._IDCircuito != value))
				{
					this.OnIDCircuitoChanging(value);
					this.SendPropertyChanging();
					this._IDCircuito = value;
					this.SendPropertyChanged("IDCircuito");
					this.OnIDCircuitoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stato", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string stato
		{
			get
			{
				return this._stato;
			}
			set
			{
				if ((this._stato != value))
				{
					this.OnstatoChanging(value);
					this.SendPropertyChanging();
					this._stato = value;
					this.SendPropertyChanged("stato");
					this.OnstatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lunghezza", DbType="Int NOT NULL")]
		public int lunghezza
		{
			get
			{
				return this._lunghezza;
			}
			set
			{
				if ((this._lunghezza != value))
				{
					this.OnlunghezzaChanging(value);
					this.SendPropertyChanging();
					this._lunghezza = value;
					this.SendPropertyChanged("lunghezza");
					this.OnlunghezzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipologia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tipologia
		{
			get
			{
				return this._tipologia;
			}
			set
			{
				if ((this._tipologia != value))
				{
					this.OntipologiaChanging(value);
					this.SendPropertyChanging();
					this._tipologia = value;
					this.SendPropertyChanged("tipologia");
					this.OntipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroCurve", DbType="Int NOT NULL")]
		public int numeroCurve
		{
			get
			{
				return this._numeroCurve;
			}
			set
			{
				if ((this._numeroCurve != value))
				{
					this.OnnumeroCurveChanging(value);
					this.SendPropertyChanging();
					this._numeroCurve = value;
					this.SendPropertyChanged("numeroCurve");
					this.OnnumeroCurveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="circuiti_gare", Storage="_gares", ThisKey="IDCircuito", OtherKey="IDCircuito")]
		public EntitySet<gare> gares
		{
			get
			{
				return this._gares;
			}
			set
			{
				this._gares.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_gares(gare entity)
		{
			this.SendPropertyChanging();
			entity.circuiti = this;
		}
		
		private void detach_gares(gare entity)
		{
			this.SendPropertyChanging();
			entity.circuiti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.classifiche_piloti")]
	public partial class classifiche_piloti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCampionato;
		
		private string _IDCircuito;
		
		private string _CF;
		
		private string _IDVettura;
		
		private string _posizione;
		
		private EntityRef<gare> _gare;
		
		private EntityRef<partecipazioni_piloti> _partecipazioni_piloti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCampionatoChanging(string value);
    partial void OnIDCampionatoChanged();
    partial void OnIDCircuitoChanging(string value);
    partial void OnIDCircuitoChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnIDVetturaChanging(string value);
    partial void OnIDVetturaChanged();
    partial void OnposizioneChanging(string value);
    partial void OnposizioneChanged();
    #endregion
		
		public classifiche_piloti()
		{
			this._gare = default(EntityRef<gare>);
			this._partecipazioni_piloti = default(EntityRef<partecipazioni_piloti>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCampionato", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCampionato
		{
			get
			{
				return this._IDCampionato;
			}
			set
			{
				if ((this._IDCampionato != value))
				{
					if (this._gare.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCampionatoChanging(value);
					this.SendPropertyChanging();
					this._IDCampionato = value;
					this.SendPropertyChanged("IDCampionato");
					this.OnIDCampionatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCircuito", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCircuito
		{
			get
			{
				return this._IDCircuito;
			}
			set
			{
				if ((this._IDCircuito != value))
				{
					if (this._gare.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCircuitoChanging(value);
					this.SendPropertyChanging();
					this._IDCircuito = value;
					this.SendPropertyChanged("IDCircuito");
					this.OnIDCircuitoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._partecipazioni_piloti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVettura", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDVettura
		{
			get
			{
				return this._IDVettura;
			}
			set
			{
				if ((this._IDVettura != value))
				{
					if (this._partecipazioni_piloti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDVetturaChanging(value);
					this.SendPropertyChanging();
					this._IDVettura = value;
					this.SendPropertyChanged("IDVettura");
					this.OnIDVetturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posizione", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string posizione
		{
			get
			{
				return this._posizione;
			}
			set
			{
				if ((this._posizione != value))
				{
					this.OnposizioneChanging(value);
					this.SendPropertyChanging();
					this._posizione = value;
					this.SendPropertyChanged("posizione");
					this.OnposizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gare_classifiche_piloti", Storage="_gare", ThisKey="IDCampionato,IDCircuito", OtherKey="IDCampionato,IDCircuito", IsForeignKey=true)]
		public gare gare
		{
			get
			{
				return this._gare.Entity;
			}
			set
			{
				gare previousValue = this._gare.Entity;
				if (((previousValue != value) 
							|| (this._gare.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gare.Entity = null;
						previousValue.classifiche_pilotis.Remove(this);
					}
					this._gare.Entity = value;
					if ((value != null))
					{
						value.classifiche_pilotis.Add(this);
						this._IDCampionato = value.IDCampionato;
						this._IDCircuito = value.IDCircuito;
					}
					else
					{
						this._IDCampionato = default(string);
						this._IDCircuito = default(string);
					}
					this.SendPropertyChanged("gare");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partecipazioni_piloti_classifiche_piloti", Storage="_partecipazioni_piloti", ThisKey="CF,IDVettura", OtherKey="CF,IDVettura", IsForeignKey=true)]
		public partecipazioni_piloti partecipazioni_piloti
		{
			get
			{
				return this._partecipazioni_piloti.Entity;
			}
			set
			{
				partecipazioni_piloti previousValue = this._partecipazioni_piloti.Entity;
				if (((previousValue != value) 
							|| (this._partecipazioni_piloti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._partecipazioni_piloti.Entity = null;
						previousValue.classifiche_pilotis.Remove(this);
					}
					this._partecipazioni_piloti.Entity = value;
					if ((value != null))
					{
						value.classifiche_pilotis.Add(this);
						this._CF = value.CF;
						this._IDVettura = value.IDVettura;
					}
					else
					{
						this._CF = default(string);
						this._IDVettura = default(string);
					}
					this.SendPropertyChanged("partecipazioni_piloti");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.componenti")]
	public partial class componenti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDComponente;
		
		private string _Descrizione;
		
		private string _PrezzoUnitario;
		
		private EntitySet<composizioni> _composizionis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDComponenteChanging(string value);
    partial void OnIDComponenteChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnPrezzoUnitarioChanging(string value);
    partial void OnPrezzoUnitarioChanged();
    #endregion
		
		public componenti()
		{
			this._composizionis = new EntitySet<composizioni>(new Action<composizioni>(this.attach_composizionis), new Action<composizioni>(this.detach_composizionis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDComponente", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDComponente
		{
			get
			{
				return this._IDComponente;
			}
			set
			{
				if ((this._IDComponente != value))
				{
					this.OnIDComponenteChanging(value);
					this.SendPropertyChanging();
					this._IDComponente = value;
					this.SendPropertyChanged("IDComponente");
					this.OnIDComponenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrezzoUnitario", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PrezzoUnitario
		{
			get
			{
				return this._PrezzoUnitario;
			}
			set
			{
				if ((this._PrezzoUnitario != value))
				{
					this.OnPrezzoUnitarioChanging(value);
					this.SendPropertyChanging();
					this._PrezzoUnitario = value;
					this.SendPropertyChanged("PrezzoUnitario");
					this.OnPrezzoUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="componenti_composizioni", Storage="_composizionis", ThisKey="IDComponente", OtherKey="IDComponente")]
		public EntitySet<composizioni> composizionis
		{
			get
			{
				return this._composizionis;
			}
			set
			{
				this._composizionis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_composizionis(composizioni entity)
		{
			this.SendPropertyChanging();
			entity.componenti = this;
		}
		
		private void detach_composizionis(composizioni entity)
		{
			this.SendPropertyChanging();
			entity.componenti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.composizioni")]
	public partial class composizioni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDVettura;
		
		private string _IDComponente;
		
		private int _Quantita;
		
		private EntityRef<componenti> _componenti;
		
		private EntityRef<vetture> _vetture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVetturaChanging(string value);
    partial void OnIDVetturaChanged();
    partial void OnIDComponenteChanging(string value);
    partial void OnIDComponenteChanged();
    partial void OnQuantitaChanging(int value);
    partial void OnQuantitaChanged();
    #endregion
		
		public composizioni()
		{
			this._componenti = default(EntityRef<componenti>);
			this._vetture = default(EntityRef<vetture>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVettura", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDVettura
		{
			get
			{
				return this._IDVettura;
			}
			set
			{
				if ((this._IDVettura != value))
				{
					if (this._vetture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDVetturaChanging(value);
					this.SendPropertyChanging();
					this._IDVettura = value;
					this.SendPropertyChanged("IDVettura");
					this.OnIDVetturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDComponente", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDComponente
		{
			get
			{
				return this._IDComponente;
			}
			set
			{
				if ((this._IDComponente != value))
				{
					if (this._componenti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDComponenteChanging(value);
					this.SendPropertyChanging();
					this._IDComponente = value;
					this.SendPropertyChanged("IDComponente");
					this.OnIDComponenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantita", DbType="Int NOT NULL")]
		public int Quantita
		{
			get
			{
				return this._Quantita;
			}
			set
			{
				if ((this._Quantita != value))
				{
					this.OnQuantitaChanging(value);
					this.SendPropertyChanging();
					this._Quantita = value;
					this.SendPropertyChanged("Quantita");
					this.OnQuantitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="componenti_composizioni", Storage="_componenti", ThisKey="IDComponente", OtherKey="IDComponente", IsForeignKey=true)]
		public componenti componenti
		{
			get
			{
				return this._componenti.Entity;
			}
			set
			{
				componenti previousValue = this._componenti.Entity;
				if (((previousValue != value) 
							|| (this._componenti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._componenti.Entity = null;
						previousValue.composizionis.Remove(this);
					}
					this._componenti.Entity = value;
					if ((value != null))
					{
						value.composizionis.Add(this);
						this._IDComponente = value.IDComponente;
					}
					else
					{
						this._IDComponente = default(string);
					}
					this.SendPropertyChanged("componenti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vetture_composizioni", Storage="_vetture", ThisKey="IDVettura", OtherKey="IDVettura", IsForeignKey=true)]
		public vetture vetture
		{
			get
			{
				return this._vetture.Entity;
			}
			set
			{
				vetture previousValue = this._vetture.Entity;
				if (((previousValue != value) 
							|| (this._vetture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vetture.Entity = null;
						previousValue.composizionis.Remove(this);
					}
					this._vetture.Entity = value;
					if ((value != null))
					{
						value.composizionis.Add(this);
						this._IDVettura = value.IDVettura;
					}
					else
					{
						this._IDVettura = default(string);
					}
					this.SendPropertyChanged("vetture");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.contratti")]
	public partial class contratti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDSponsor;
		
		private int _budget;
		
		private System.DateTime _dataInizio;
		
		private System.Nullable<System.DateTime> _dataFine;
		
		private string _IDTeam;
		
		private EntityRef<sponsor> _sponsor;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSponsorChanging(string value);
    partial void OnIDSponsorChanged();
    partial void OnbudgetChanging(int value);
    partial void OnbudgetChanged();
    partial void OndataInizioChanging(System.DateTime value);
    partial void OndataInizioChanged();
    partial void OndataFineChanging(System.Nullable<System.DateTime> value);
    partial void OndataFineChanged();
    partial void OnIDTeamChanging(string value);
    partial void OnIDTeamChanged();
    #endregion
		
		public contratti()
		{
			this._sponsor = default(EntityRef<sponsor>);
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSponsor", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDSponsor
		{
			get
			{
				return this._IDSponsor;
			}
			set
			{
				if ((this._IDSponsor != value))
				{
					if (this._sponsor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSponsorChanging(value);
					this.SendPropertyChanging();
					this._IDSponsor = value;
					this.SendPropertyChanged("IDSponsor");
					this.OnIDSponsorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_budget", DbType="Int NOT NULL")]
		public int budget
		{
			get
			{
				return this._budget;
			}
			set
			{
				if ((this._budget != value))
				{
					this.OnbudgetChanging(value);
					this.SendPropertyChanging();
					this._budget = value;
					this.SendPropertyChanged("budget");
					this.OnbudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataInizio", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dataInizio
		{
			get
			{
				return this._dataInizio;
			}
			set
			{
				if ((this._dataInizio != value))
				{
					this.OndataInizioChanging(value);
					this.SendPropertyChanging();
					this._dataInizio = value;
					this.SendPropertyChanged("dataInizio");
					this.OndataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataFine", DbType="Date")]
		public System.Nullable<System.DateTime> dataFine
		{
			get
			{
				return this._dataFine;
			}
			set
			{
				if ((this._dataFine != value))
				{
					this.OndataFineChanging(value);
					this.SendPropertyChanging();
					this._dataFine = value;
					this.SendPropertyChanged("dataFine");
					this.OndataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTeam", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDTeam
		{
			get
			{
				return this._IDTeam;
			}
			set
			{
				if ((this._IDTeam != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTeamChanging(value);
					this.SendPropertyChanging();
					this._IDTeam = value;
					this.SendPropertyChanged("IDTeam");
					this.OnIDTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sponsor_contratti", Storage="_sponsor", ThisKey="IDSponsor", OtherKey="IDSponsor", IsForeignKey=true)]
		public sponsor sponsor
		{
			get
			{
				return this._sponsor.Entity;
			}
			set
			{
				sponsor previousValue = this._sponsor.Entity;
				if (((previousValue != value) 
							|| (this._sponsor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sponsor.Entity = null;
						previousValue.contrattis.Remove(this);
					}
					this._sponsor.Entity = value;
					if ((value != null))
					{
						value.contrattis.Add(this);
						this._IDSponsor = value.IDSponsor;
					}
					else
					{
						this._IDSponsor = default(string);
					}
					this.SendPropertyChanged("sponsor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_contratti", Storage="_team", ThisKey="IDTeam", OtherKey="IDTeam", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.contrattis.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.contrattis.Add(this);
						this._IDTeam = value.IDTeam;
					}
					else
					{
						this._IDTeam = default(string);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.dipendenti")]
	public partial class dipendenti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nome;
		
		private string _cognome;
		
		private System.DateTime _dataNascita;
		
		private string _luogoDiNascita;
		
		private string _CF;
		
		private string _residenza;
		
		private EntitySet<incarichi_dipendenti> _incarichi_dipendentis;
		
		private EntitySet<recapiti_dipendenti> _recapiti_dipendentis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    partial void OndataNascitaChanging(System.DateTime value);
    partial void OndataNascitaChanged();
    partial void OnluogoDiNascitaChanging(string value);
    partial void OnluogoDiNascitaChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnresidenzaChanging(string value);
    partial void OnresidenzaChanged();
    #endregion
		
		public dipendenti()
		{
			this._incarichi_dipendentis = new EntitySet<incarichi_dipendenti>(new Action<incarichi_dipendenti>(this.attach_incarichi_dipendentis), new Action<incarichi_dipendenti>(this.detach_incarichi_dipendentis));
			this._recapiti_dipendentis = new EntitySet<recapiti_dipendenti>(new Action<recapiti_dipendenti>(this.attach_recapiti_dipendentis), new Action<recapiti_dipendenti>(this.detach_recapiti_dipendentis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataNascita", DbType="Date NOT NULL")]
		public System.DateTime dataNascita
		{
			get
			{
				return this._dataNascita;
			}
			set
			{
				if ((this._dataNascita != value))
				{
					this.OndataNascitaChanging(value);
					this.SendPropertyChanging();
					this._dataNascita = value;
					this.SendPropertyChanged("dataNascita");
					this.OndataNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luogoDiNascita", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string luogoDiNascita
		{
			get
			{
				return this._luogoDiNascita;
			}
			set
			{
				if ((this._luogoDiNascita != value))
				{
					this.OnluogoDiNascitaChanging(value);
					this.SendPropertyChanging();
					this._luogoDiNascita = value;
					this.SendPropertyChanged("luogoDiNascita");
					this.OnluogoDiNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residenza", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string residenza
		{
			get
			{
				return this._residenza;
			}
			set
			{
				if ((this._residenza != value))
				{
					this.OnresidenzaChanging(value);
					this.SendPropertyChanging();
					this._residenza = value;
					this.SendPropertyChanged("residenza");
					this.OnresidenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dipendenti_incarichi_dipendenti", Storage="_incarichi_dipendentis", ThisKey="CF", OtherKey="CF")]
		public EntitySet<incarichi_dipendenti> incarichi_dipendentis
		{
			get
			{
				return this._incarichi_dipendentis;
			}
			set
			{
				this._incarichi_dipendentis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dipendenti_recapiti_dipendenti", Storage="_recapiti_dipendentis", ThisKey="CF", OtherKey="CF")]
		public EntitySet<recapiti_dipendenti> recapiti_dipendentis
		{
			get
			{
				return this._recapiti_dipendentis;
			}
			set
			{
				this._recapiti_dipendentis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_incarichi_dipendentis(incarichi_dipendenti entity)
		{
			this.SendPropertyChanging();
			entity.dipendenti = this;
		}
		
		private void detach_incarichi_dipendentis(incarichi_dipendenti entity)
		{
			this.SendPropertyChanging();
			entity.dipendenti = null;
		}
		
		private void attach_recapiti_dipendentis(recapiti_dipendenti entity)
		{
			this.SendPropertyChanging();
			entity.dipendenti = this;
		}
		
		private void detach_recapiti_dipendentis(recapiti_dipendenti entity)
		{
			this.SendPropertyChanging();
			entity.dipendenti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.gare")]
	public partial class gare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCircuito;
		
		private string _IDCampionato;
		
		private System.DateTime _data;
		
		private int _giri;
		
		private EntitySet<classifiche_piloti> _classifiche_pilotis;
		
		private EntityRef<circuiti> _circuiti;
		
		private EntityRef<campionati> _campionati;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCircuitoChanging(string value);
    partial void OnIDCircuitoChanged();
    partial void OnIDCampionatoChanging(string value);
    partial void OnIDCampionatoChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OngiriChanging(int value);
    partial void OngiriChanged();
    #endregion
		
		public gare()
		{
			this._classifiche_pilotis = new EntitySet<classifiche_piloti>(new Action<classifiche_piloti>(this.attach_classifiche_pilotis), new Action<classifiche_piloti>(this.detach_classifiche_pilotis));
			this._circuiti = default(EntityRef<circuiti>);
			this._campionati = default(EntityRef<campionati>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCircuito", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCircuito
		{
			get
			{
				return this._IDCircuito;
			}
			set
			{
				if ((this._IDCircuito != value))
				{
					if (this._circuiti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCircuitoChanging(value);
					this.SendPropertyChanging();
					this._IDCircuito = value;
					this.SendPropertyChanged("IDCircuito");
					this.OnIDCircuitoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCampionato", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCampionato
		{
			get
			{
				return this._IDCampionato;
			}
			set
			{
				if ((this._IDCampionato != value))
				{
					if (this._campionati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCampionatoChanging(value);
					this.SendPropertyChanging();
					this._IDCampionato = value;
					this.SendPropertyChanged("IDCampionato");
					this.OnIDCampionatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giri", DbType="Int NOT NULL")]
		public int giri
		{
			get
			{
				return this._giri;
			}
			set
			{
				if ((this._giri != value))
				{
					this.OngiriChanging(value);
					this.SendPropertyChanging();
					this._giri = value;
					this.SendPropertyChanged("giri");
					this.OngiriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gare_classifiche_piloti", Storage="_classifiche_pilotis", ThisKey="IDCampionato,IDCircuito", OtherKey="IDCampionato,IDCircuito")]
		public EntitySet<classifiche_piloti> classifiche_pilotis
		{
			get
			{
				return this._classifiche_pilotis;
			}
			set
			{
				this._classifiche_pilotis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="circuiti_gare", Storage="_circuiti", ThisKey="IDCircuito", OtherKey="IDCircuito", IsForeignKey=true)]
		public circuiti circuiti
		{
			get
			{
				return this._circuiti.Entity;
			}
			set
			{
				circuiti previousValue = this._circuiti.Entity;
				if (((previousValue != value) 
							|| (this._circuiti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._circuiti.Entity = null;
						previousValue.gares.Remove(this);
					}
					this._circuiti.Entity = value;
					if ((value != null))
					{
						value.gares.Add(this);
						this._IDCircuito = value.IDCircuito;
					}
					else
					{
						this._IDCircuito = default(string);
					}
					this.SendPropertyChanged("circuiti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="campionati_gare", Storage="_campionati", ThisKey="IDCampionato", OtherKey="IDCampionato", IsForeignKey=true)]
		public campionati campionati
		{
			get
			{
				return this._campionati.Entity;
			}
			set
			{
				campionati previousValue = this._campionati.Entity;
				if (((previousValue != value) 
							|| (this._campionati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._campionati.Entity = null;
						previousValue.gares.Remove(this);
					}
					this._campionati.Entity = value;
					if ((value != null))
					{
						value.gares.Add(this);
						this._IDCampionato = value.IDCampionato;
					}
					else
					{
						this._IDCampionato = default(string);
					}
					this.SendPropertyChanged("campionati");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_classifiche_pilotis(classifiche_piloti entity)
		{
			this.SendPropertyChanging();
			entity.gare = this;
		}
		
		private void detach_classifiche_pilotis(classifiche_piloti entity)
		{
			this.SendPropertyChanging();
			entity.gare = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.incarichi_dipendenti")]
	public partial class incarichi_dipendenti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF;
		
		private System.DateTime _dataAssunzione;
		
		private System.Nullable<System.DateTime> _dataLicenziamento;
		
		private string _Ruolo;
		
		private string _stipendio;
		
		private string _IDTeam;
		
		private EntityRef<dipendenti> _dipendenti;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OndataAssunzioneChanging(System.DateTime value);
    partial void OndataAssunzioneChanged();
    partial void OndataLicenziamentoChanging(System.Nullable<System.DateTime> value);
    partial void OndataLicenziamentoChanged();
    partial void OnRuoloChanging(string value);
    partial void OnRuoloChanged();
    partial void OnstipendioChanging(string value);
    partial void OnstipendioChanged();
    partial void OnIDTeamChanging(string value);
    partial void OnIDTeamChanged();
    #endregion
		
		public incarichi_dipendenti()
		{
			this._dipendenti = default(EntityRef<dipendenti>);
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._dipendenti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataAssunzione", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dataAssunzione
		{
			get
			{
				return this._dataAssunzione;
			}
			set
			{
				if ((this._dataAssunzione != value))
				{
					this.OndataAssunzioneChanging(value);
					this.SendPropertyChanging();
					this._dataAssunzione = value;
					this.SendPropertyChanged("dataAssunzione");
					this.OndataAssunzioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataLicenziamento", DbType="Date")]
		public System.Nullable<System.DateTime> dataLicenziamento
		{
			get
			{
				return this._dataLicenziamento;
			}
			set
			{
				if ((this._dataLicenziamento != value))
				{
					this.OndataLicenziamentoChanging(value);
					this.SendPropertyChanging();
					this._dataLicenziamento = value;
					this.SendPropertyChanged("dataLicenziamento");
					this.OndataLicenziamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ruolo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ruolo
		{
			get
			{
				return this._Ruolo;
			}
			set
			{
				if ((this._Ruolo != value))
				{
					this.OnRuoloChanging(value);
					this.SendPropertyChanging();
					this._Ruolo = value;
					this.SendPropertyChanged("Ruolo");
					this.OnRuoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stipendio", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string stipendio
		{
			get
			{
				return this._stipendio;
			}
			set
			{
				if ((this._stipendio != value))
				{
					this.OnstipendioChanging(value);
					this.SendPropertyChanging();
					this._stipendio = value;
					this.SendPropertyChanged("stipendio");
					this.OnstipendioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTeam", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDTeam
		{
			get
			{
				return this._IDTeam;
			}
			set
			{
				if ((this._IDTeam != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTeamChanging(value);
					this.SendPropertyChanging();
					this._IDTeam = value;
					this.SendPropertyChanged("IDTeam");
					this.OnIDTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dipendenti_incarichi_dipendenti", Storage="_dipendenti", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public dipendenti dipendenti
		{
			get
			{
				return this._dipendenti.Entity;
			}
			set
			{
				dipendenti previousValue = this._dipendenti.Entity;
				if (((previousValue != value) 
							|| (this._dipendenti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dipendenti.Entity = null;
						previousValue.incarichi_dipendentis.Remove(this);
					}
					this._dipendenti.Entity = value;
					if ((value != null))
					{
						value.incarichi_dipendentis.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("dipendenti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_incarichi_dipendenti", Storage="_team", ThisKey="IDTeam", OtherKey="IDTeam", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.incarichi_dipendentis.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.incarichi_dipendentis.Add(this);
						this._IDTeam = value.IDTeam;
					}
					else
					{
						this._IDTeam = default(string);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.incarichi_piloti")]
	public partial class incarichi_piloti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF;
		
		private System.DateTime _dataAssunzione;
		
		private System.Nullable<System.DateTime> _dataLicenziamento;
		
		private string _stipendio;
		
		private string _IDTeam;
		
		private EntityRef<piloti> _piloti;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OndataAssunzioneChanging(System.DateTime value);
    partial void OndataAssunzioneChanged();
    partial void OndataLicenziamentoChanging(System.Nullable<System.DateTime> value);
    partial void OndataLicenziamentoChanged();
    partial void OnstipendioChanging(string value);
    partial void OnstipendioChanged();
    partial void OnIDTeamChanging(string value);
    partial void OnIDTeamChanged();
    #endregion
		
		public incarichi_piloti()
		{
			this._piloti = default(EntityRef<piloti>);
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._piloti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataAssunzione", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dataAssunzione
		{
			get
			{
				return this._dataAssunzione;
			}
			set
			{
				if ((this._dataAssunzione != value))
				{
					this.OndataAssunzioneChanging(value);
					this.SendPropertyChanging();
					this._dataAssunzione = value;
					this.SendPropertyChanged("dataAssunzione");
					this.OndataAssunzioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataLicenziamento", DbType="Date")]
		public System.Nullable<System.DateTime> dataLicenziamento
		{
			get
			{
				return this._dataLicenziamento;
			}
			set
			{
				if ((this._dataLicenziamento != value))
				{
					this.OndataLicenziamentoChanging(value);
					this.SendPropertyChanging();
					this._dataLicenziamento = value;
					this.SendPropertyChanged("dataLicenziamento");
					this.OndataLicenziamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stipendio", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string stipendio
		{
			get
			{
				return this._stipendio;
			}
			set
			{
				if ((this._stipendio != value))
				{
					this.OnstipendioChanging(value);
					this.SendPropertyChanging();
					this._stipendio = value;
					this.SendPropertyChanged("stipendio");
					this.OnstipendioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTeam", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDTeam
		{
			get
			{
				return this._IDTeam;
			}
			set
			{
				if ((this._IDTeam != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTeamChanging(value);
					this.SendPropertyChanging();
					this._IDTeam = value;
					this.SendPropertyChanged("IDTeam");
					this.OnIDTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="piloti_incarichi_piloti", Storage="_piloti", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public piloti piloti
		{
			get
			{
				return this._piloti.Entity;
			}
			set
			{
				piloti previousValue = this._piloti.Entity;
				if (((previousValue != value) 
							|| (this._piloti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._piloti.Entity = null;
						previousValue.incarichi_pilotis.Remove(this);
					}
					this._piloti.Entity = value;
					if ((value != null))
					{
						value.incarichi_pilotis.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("piloti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_incarichi_piloti", Storage="_team", ThisKey="IDTeam", OtherKey="IDTeam", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.incarichi_pilotis.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.incarichi_pilotis.Add(this);
						this._IDTeam = value.IDTeam;
					}
					else
					{
						this._IDTeam = default(string);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.mail_sponsor")]
	public partial class mail_sponsor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mail;
		
		private string _IDSponsor;
		
		private EntityRef<sponsor> _sponsor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnIDSponsorChanging(string value);
    partial void OnIDSponsorChanged();
    #endregion
		
		public mail_sponsor()
		{
			this._sponsor = default(EntityRef<sponsor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSponsor", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDSponsor
		{
			get
			{
				return this._IDSponsor;
			}
			set
			{
				if ((this._IDSponsor != value))
				{
					if (this._sponsor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSponsorChanging(value);
					this.SendPropertyChanging();
					this._IDSponsor = value;
					this.SendPropertyChanged("IDSponsor");
					this.OnIDSponsorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sponsor_mail_sponsor", Storage="_sponsor", ThisKey="IDSponsor", OtherKey="IDSponsor", IsForeignKey=true)]
		public sponsor sponsor
		{
			get
			{
				return this._sponsor.Entity;
			}
			set
			{
				sponsor previousValue = this._sponsor.Entity;
				if (((previousValue != value) 
							|| (this._sponsor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sponsor.Entity = null;
						previousValue.mail_sponsors.Remove(this);
					}
					this._sponsor.Entity = value;
					if ((value != null))
					{
						value.mail_sponsors.Add(this);
						this._IDSponsor = value.IDSponsor;
					}
					else
					{
						this._IDSponsor = default(string);
					}
					this.SendPropertyChanged("sponsor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.mail_team")]
	public partial class mail_team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mail;
		
		private string _IDTeam;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnIDTeamChanging(string value);
    partial void OnIDTeamChanged();
    #endregion
		
		public mail_team()
		{
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTeam", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDTeam
		{
			get
			{
				return this._IDTeam;
			}
			set
			{
				if ((this._IDTeam != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTeamChanging(value);
					this.SendPropertyChanging();
					this._IDTeam = value;
					this.SendPropertyChanged("IDTeam");
					this.OnIDTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_mail_team", Storage="_team", ThisKey="IDTeam", OtherKey="IDTeam", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.mail_teams.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.mail_teams.Add(this);
						this._IDTeam = value.IDTeam;
					}
					else
					{
						this._IDTeam = default(string);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.partecipazioni_piloti")]
	public partial class partecipazioni_piloti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF;
		
		private string _IDVettura;
		
		private int _numeroDiGara;
		
		private string _IDCampionato;
		
		private int _puntiAttuali;
		
		private EntitySet<classifiche_piloti> _classifiche_pilotis;
		
		private EntityRef<vetture> _vetture;
		
		private EntityRef<campionati> _campionati;
		
		private EntityRef<piloti> _piloti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnIDVetturaChanging(string value);
    partial void OnIDVetturaChanged();
    partial void OnnumeroDiGaraChanging(int value);
    partial void OnnumeroDiGaraChanged();
    partial void OnIDCampionatoChanging(string value);
    partial void OnIDCampionatoChanged();
    partial void OnpuntiAttualiChanging(int value);
    partial void OnpuntiAttualiChanged();
    #endregion
		
		public partecipazioni_piloti()
		{
			this._classifiche_pilotis = new EntitySet<classifiche_piloti>(new Action<classifiche_piloti>(this.attach_classifiche_pilotis), new Action<classifiche_piloti>(this.detach_classifiche_pilotis));
			this._vetture = default(EntityRef<vetture>);
			this._campionati = default(EntityRef<campionati>);
			this._piloti = default(EntityRef<piloti>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._piloti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVettura", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDVettura
		{
			get
			{
				return this._IDVettura;
			}
			set
			{
				if ((this._IDVettura != value))
				{
					if (this._vetture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDVetturaChanging(value);
					this.SendPropertyChanging();
					this._IDVettura = value;
					this.SendPropertyChanged("IDVettura");
					this.OnIDVetturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroDiGara", DbType="Int NOT NULL")]
		public int numeroDiGara
		{
			get
			{
				return this._numeroDiGara;
			}
			set
			{
				if ((this._numeroDiGara != value))
				{
					this.OnnumeroDiGaraChanging(value);
					this.SendPropertyChanging();
					this._numeroDiGara = value;
					this.SendPropertyChanged("numeroDiGara");
					this.OnnumeroDiGaraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCampionato", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDCampionato
		{
			get
			{
				return this._IDCampionato;
			}
			set
			{
				if ((this._IDCampionato != value))
				{
					if (this._campionati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCampionatoChanging(value);
					this.SendPropertyChanging();
					this._IDCampionato = value;
					this.SendPropertyChanged("IDCampionato");
					this.OnIDCampionatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntiAttuali", DbType="Int NOT NULL")]
		public int puntiAttuali
		{
			get
			{
				return this._puntiAttuali;
			}
			set
			{
				if ((this._puntiAttuali != value))
				{
					this.OnpuntiAttualiChanging(value);
					this.SendPropertyChanging();
					this._puntiAttuali = value;
					this.SendPropertyChanged("puntiAttuali");
					this.OnpuntiAttualiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partecipazioni_piloti_classifiche_piloti", Storage="_classifiche_pilotis", ThisKey="CF,IDVettura", OtherKey="CF,IDVettura")]
		public EntitySet<classifiche_piloti> classifiche_pilotis
		{
			get
			{
				return this._classifiche_pilotis;
			}
			set
			{
				this._classifiche_pilotis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vetture_partecipazioni_piloti", Storage="_vetture", ThisKey="IDVettura", OtherKey="IDVettura", IsForeignKey=true)]
		public vetture vetture
		{
			get
			{
				return this._vetture.Entity;
			}
			set
			{
				vetture previousValue = this._vetture.Entity;
				if (((previousValue != value) 
							|| (this._vetture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vetture.Entity = null;
						previousValue.partecipazioni_pilotis.Remove(this);
					}
					this._vetture.Entity = value;
					if ((value != null))
					{
						value.partecipazioni_pilotis.Add(this);
						this._IDVettura = value.IDVettura;
					}
					else
					{
						this._IDVettura = default(string);
					}
					this.SendPropertyChanged("vetture");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="campionati_partecipazioni_piloti", Storage="_campionati", ThisKey="IDCampionato", OtherKey="IDCampionato", IsForeignKey=true)]
		public campionati campionati
		{
			get
			{
				return this._campionati.Entity;
			}
			set
			{
				campionati previousValue = this._campionati.Entity;
				if (((previousValue != value) 
							|| (this._campionati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._campionati.Entity = null;
						previousValue.partecipazioni_pilotis.Remove(this);
					}
					this._campionati.Entity = value;
					if ((value != null))
					{
						value.partecipazioni_pilotis.Add(this);
						this._IDCampionato = value.IDCampionato;
					}
					else
					{
						this._IDCampionato = default(string);
					}
					this.SendPropertyChanged("campionati");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="piloti_partecipazioni_piloti", Storage="_piloti", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public piloti piloti
		{
			get
			{
				return this._piloti.Entity;
			}
			set
			{
				piloti previousValue = this._piloti.Entity;
				if (((previousValue != value) 
							|| (this._piloti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._piloti.Entity = null;
						previousValue.partecipazioni_pilotis.Remove(this);
					}
					this._piloti.Entity = value;
					if ((value != null))
					{
						value.partecipazioni_pilotis.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("piloti");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_classifiche_pilotis(classifiche_piloti entity)
		{
			this.SendPropertyChanging();
			entity.partecipazioni_piloti = this;
		}
		
		private void detach_classifiche_pilotis(classifiche_piloti entity)
		{
			this.SendPropertyChanging();
			entity.partecipazioni_piloti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.piloti")]
	public partial class piloti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nome;
		
		private string _cognome;
		
		private System.DateTime _dataDiNascita;
		
		private string _luogoDiNascita;
		
		private string _CF;
		
		private string _residenza;
		
		private int _gareVinte;
		
		private int _campionatiVinti;
		
		private int _numerodipresenze;
		
		private EntitySet<incarichi_piloti> _incarichi_pilotis;
		
		private EntitySet<partecipazioni_piloti> _partecipazioni_pilotis;
		
		private EntitySet<recapiti_piloti> _recapiti_pilotis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    partial void OndataDiNascitaChanging(System.DateTime value);
    partial void OndataDiNascitaChanged();
    partial void OnluogoDiNascitaChanging(string value);
    partial void OnluogoDiNascitaChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnresidenzaChanging(string value);
    partial void OnresidenzaChanged();
    partial void OngareVinteChanging(int value);
    partial void OngareVinteChanged();
    partial void OncampionatiVintiChanging(int value);
    partial void OncampionatiVintiChanged();
    partial void OnnumerodipresenzeChanging(int value);
    partial void OnnumerodipresenzeChanged();
    #endregion
		
		public piloti()
		{
			this._incarichi_pilotis = new EntitySet<incarichi_piloti>(new Action<incarichi_piloti>(this.attach_incarichi_pilotis), new Action<incarichi_piloti>(this.detach_incarichi_pilotis));
			this._partecipazioni_pilotis = new EntitySet<partecipazioni_piloti>(new Action<partecipazioni_piloti>(this.attach_partecipazioni_pilotis), new Action<partecipazioni_piloti>(this.detach_partecipazioni_pilotis));
			this._recapiti_pilotis = new EntitySet<recapiti_piloti>(new Action<recapiti_piloti>(this.attach_recapiti_pilotis), new Action<recapiti_piloti>(this.detach_recapiti_pilotis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataDiNascita", DbType="Date NOT NULL")]
		public System.DateTime dataDiNascita
		{
			get
			{
				return this._dataDiNascita;
			}
			set
			{
				if ((this._dataDiNascita != value))
				{
					this.OndataDiNascitaChanging(value);
					this.SendPropertyChanging();
					this._dataDiNascita = value;
					this.SendPropertyChanged("dataDiNascita");
					this.OndataDiNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luogoDiNascita", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string luogoDiNascita
		{
			get
			{
				return this._luogoDiNascita;
			}
			set
			{
				if ((this._luogoDiNascita != value))
				{
					this.OnluogoDiNascitaChanging(value);
					this.SendPropertyChanging();
					this._luogoDiNascita = value;
					this.SendPropertyChanged("luogoDiNascita");
					this.OnluogoDiNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residenza", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string residenza
		{
			get
			{
				return this._residenza;
			}
			set
			{
				if ((this._residenza != value))
				{
					this.OnresidenzaChanging(value);
					this.SendPropertyChanging();
					this._residenza = value;
					this.SendPropertyChanged("residenza");
					this.OnresidenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gareVinte", DbType="Int NOT NULL")]
		public int gareVinte
		{
			get
			{
				return this._gareVinte;
			}
			set
			{
				if ((this._gareVinte != value))
				{
					this.OngareVinteChanging(value);
					this.SendPropertyChanging();
					this._gareVinte = value;
					this.SendPropertyChanged("gareVinte");
					this.OngareVinteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_campionatiVinti", DbType="Int NOT NULL")]
		public int campionatiVinti
		{
			get
			{
				return this._campionatiVinti;
			}
			set
			{
				if ((this._campionatiVinti != value))
				{
					this.OncampionatiVintiChanging(value);
					this.SendPropertyChanging();
					this._campionatiVinti = value;
					this.SendPropertyChanged("campionatiVinti");
					this.OncampionatiVintiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numerodipresenze", DbType="Int NOT NULL")]
		public int numerodipresenze
		{
			get
			{
				return this._numerodipresenze;
			}
			set
			{
				if ((this._numerodipresenze != value))
				{
					this.OnnumerodipresenzeChanging(value);
					this.SendPropertyChanging();
					this._numerodipresenze = value;
					this.SendPropertyChanged("numerodipresenze");
					this.OnnumerodipresenzeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="piloti_incarichi_piloti", Storage="_incarichi_pilotis", ThisKey="CF", OtherKey="CF")]
		public EntitySet<incarichi_piloti> incarichi_pilotis
		{
			get
			{
				return this._incarichi_pilotis;
			}
			set
			{
				this._incarichi_pilotis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="piloti_partecipazioni_piloti", Storage="_partecipazioni_pilotis", ThisKey="CF", OtherKey="CF")]
		public EntitySet<partecipazioni_piloti> partecipazioni_pilotis
		{
			get
			{
				return this._partecipazioni_pilotis;
			}
			set
			{
				this._partecipazioni_pilotis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="piloti_recapiti_piloti", Storage="_recapiti_pilotis", ThisKey="CF", OtherKey="CF")]
		public EntitySet<recapiti_piloti> recapiti_pilotis
		{
			get
			{
				return this._recapiti_pilotis;
			}
			set
			{
				this._recapiti_pilotis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_incarichi_pilotis(incarichi_piloti entity)
		{
			this.SendPropertyChanging();
			entity.piloti = this;
		}
		
		private void detach_incarichi_pilotis(incarichi_piloti entity)
		{
			this.SendPropertyChanging();
			entity.piloti = null;
		}
		
		private void attach_partecipazioni_pilotis(partecipazioni_piloti entity)
		{
			this.SendPropertyChanging();
			entity.piloti = this;
		}
		
		private void detach_partecipazioni_pilotis(partecipazioni_piloti entity)
		{
			this.SendPropertyChanging();
			entity.piloti = null;
		}
		
		private void attach_recapiti_pilotis(recapiti_piloti entity)
		{
			this.SendPropertyChanging();
			entity.piloti = this;
		}
		
		private void detach_recapiti_pilotis(recapiti_piloti entity)
		{
			this.SendPropertyChanging();
			entity.piloti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.recapiti_dipendenti")]
	public partial class recapiti_dipendenti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF;
		
		private string _Telefono;
		
		private EntityRef<dipendenti> _dipendenti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public recapiti_dipendenti()
		{
			this._dipendenti = default(EntityRef<dipendenti>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NChar(16) NOT NULL", CanBeNull=false)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._dipendenti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dipendenti_recapiti_dipendenti", Storage="_dipendenti", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public dipendenti dipendenti
		{
			get
			{
				return this._dipendenti.Entity;
			}
			set
			{
				dipendenti previousValue = this._dipendenti.Entity;
				if (((previousValue != value) 
							|| (this._dipendenti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dipendenti.Entity = null;
						previousValue.recapiti_dipendentis.Remove(this);
					}
					this._dipendenti.Entity = value;
					if ((value != null))
					{
						value.recapiti_dipendentis.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("dipendenti");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.recapiti_piloti")]
	public partial class recapiti_piloti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Telefono;
		
		private string _CF;
		
		private EntityRef<piloti> _piloti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    #endregion
		
		public recapiti_piloti()
		{
			this._piloti = default(EntityRef<piloti>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NChar(16) NOT NULL", CanBeNull=false)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._piloti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="piloti_recapiti_piloti", Storage="_piloti", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public piloti piloti
		{
			get
			{
				return this._piloti.Entity;
			}
			set
			{
				piloti previousValue = this._piloti.Entity;
				if (((previousValue != value) 
							|| (this._piloti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._piloti.Entity = null;
						previousValue.recapiti_pilotis.Remove(this);
					}
					this._piloti.Entity = value;
					if ((value != null))
					{
						value.recapiti_pilotis.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("piloti");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.recapiti_sponsor")]
	public partial class recapiti_sponsor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Telefono;
		
		private string _IDSponsor;
		
		private EntityRef<sponsor> _sponsor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnIDSponsorChanging(string value);
    partial void OnIDSponsorChanged();
    #endregion
		
		public recapiti_sponsor()
		{
			this._sponsor = default(EntityRef<sponsor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSponsor", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDSponsor
		{
			get
			{
				return this._IDSponsor;
			}
			set
			{
				if ((this._IDSponsor != value))
				{
					if (this._sponsor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSponsorChanging(value);
					this.SendPropertyChanging();
					this._IDSponsor = value;
					this.SendPropertyChanged("IDSponsor");
					this.OnIDSponsorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sponsor_recapiti_sponsor", Storage="_sponsor", ThisKey="IDSponsor", OtherKey="IDSponsor", IsForeignKey=true)]
		public sponsor sponsor
		{
			get
			{
				return this._sponsor.Entity;
			}
			set
			{
				sponsor previousValue = this._sponsor.Entity;
				if (((previousValue != value) 
							|| (this._sponsor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sponsor.Entity = null;
						previousValue.recapiti_sponsors.Remove(this);
					}
					this._sponsor.Entity = value;
					if ((value != null))
					{
						value.recapiti_sponsors.Add(this);
						this._IDSponsor = value.IDSponsor;
					}
					else
					{
						this._IDSponsor = default(string);
					}
					this.SendPropertyChanged("sponsor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.recapiti_team")]
	public partial class recapiti_team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDTeam;
		
		private string _Telefono;
		
		private EntityRef<team> _team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTeamChanging(string value);
    partial void OnIDTeamChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public recapiti_team()
		{
			this._team = default(EntityRef<team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTeam", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string IDTeam
		{
			get
			{
				return this._IDTeam;
			}
			set
			{
				if ((this._IDTeam != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTeamChanging(value);
					this.SendPropertyChanging();
					this._IDTeam = value;
					this.SendPropertyChanged("IDTeam");
					this.OnIDTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_recapiti_team", Storage="_team", ThisKey="IDTeam", OtherKey="IDTeam", IsForeignKey=true)]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.recapiti_teams.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.recapiti_teams.Add(this);
						this._IDTeam = value.IDTeam;
					}
					else
					{
						this._IDTeam = default(string);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.sponsor")]
	public partial class sponsor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDSponsor;
		
		private string _Nome;
		
		private string _Stato;
		
		private EntitySet<contratti> _contrattis;
		
		private EntitySet<mail_sponsor> _mail_sponsors;
		
		private EntitySet<recapiti_sponsor> _recapiti_sponsors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSponsorChanging(string value);
    partial void OnIDSponsorChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnStatoChanging(string value);
    partial void OnStatoChanged();
    #endregion
		
		public sponsor()
		{
			this._contrattis = new EntitySet<contratti>(new Action<contratti>(this.attach_contrattis), new Action<contratti>(this.detach_contrattis));
			this._mail_sponsors = new EntitySet<mail_sponsor>(new Action<mail_sponsor>(this.attach_mail_sponsors), new Action<mail_sponsor>(this.detach_mail_sponsors));
			this._recapiti_sponsors = new EntitySet<recapiti_sponsor>(new Action<recapiti_sponsor>(this.attach_recapiti_sponsors), new Action<recapiti_sponsor>(this.detach_recapiti_sponsors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSponsor", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDSponsor
		{
			get
			{
				return this._IDSponsor;
			}
			set
			{
				if ((this._IDSponsor != value))
				{
					this.OnIDSponsorChanging(value);
					this.SendPropertyChanging();
					this._IDSponsor = value;
					this.SendPropertyChanged("IDSponsor");
					this.OnIDSponsorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stato", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Stato
		{
			get
			{
				return this._Stato;
			}
			set
			{
				if ((this._Stato != value))
				{
					this.OnStatoChanging(value);
					this.SendPropertyChanging();
					this._Stato = value;
					this.SendPropertyChanged("Stato");
					this.OnStatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sponsor_contratti", Storage="_contrattis", ThisKey="IDSponsor", OtherKey="IDSponsor")]
		public EntitySet<contratti> contrattis
		{
			get
			{
				return this._contrattis;
			}
			set
			{
				this._contrattis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sponsor_mail_sponsor", Storage="_mail_sponsors", ThisKey="IDSponsor", OtherKey="IDSponsor")]
		public EntitySet<mail_sponsor> mail_sponsors
		{
			get
			{
				return this._mail_sponsors;
			}
			set
			{
				this._mail_sponsors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sponsor_recapiti_sponsor", Storage="_recapiti_sponsors", ThisKey="IDSponsor", OtherKey="IDSponsor")]
		public EntitySet<recapiti_sponsor> recapiti_sponsors
		{
			get
			{
				return this._recapiti_sponsors;
			}
			set
			{
				this._recapiti_sponsors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contrattis(contratti entity)
		{
			this.SendPropertyChanging();
			entity.sponsor = this;
		}
		
		private void detach_contrattis(contratti entity)
		{
			this.SendPropertyChanging();
			entity.sponsor = null;
		}
		
		private void attach_mail_sponsors(mail_sponsor entity)
		{
			this.SendPropertyChanging();
			entity.sponsor = this;
		}
		
		private void detach_mail_sponsors(mail_sponsor entity)
		{
			this.SendPropertyChanging();
			entity.sponsor = null;
		}
		
		private void attach_recapiti_sponsors(recapiti_sponsor entity)
		{
			this.SendPropertyChanging();
			entity.sponsor = this;
		}
		
		private void detach_recapiti_sponsors(recapiti_sponsor entity)
		{
			this.SendPropertyChanging();
			entity.sponsor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="f1.team")]
	public partial class team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDTeam;
		
		private string _nome;
		
		private string _sedeCentrale;
		
		private System.DateTime _dataEsordio;
		
		private int _gareVinte;
		
		private int _campionatiVinti;
		
		private EntitySet<vetture> _vettures;
		
		private EntitySet<adesioni> _adesionis;
		
		private EntitySet<contratti> _contrattis;
		
		private EntitySet<incarichi_dipendenti> _incarichi_dipendentis;
		
		private EntitySet<incarichi_piloti> _incarichi_pilotis;
		
		private EntitySet<mail_team> _mail_teams;
		
		private EntitySet<recapiti_team> _recapiti_teams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTeamChanging(string value);
    partial void OnIDTeamChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnsedeCentraleChanging(string value);
    partial void OnsedeCentraleChanged();
    partial void OndataEsordioChanging(System.DateTime value);
    partial void OndataEsordioChanged();
    partial void OngareVinteChanging(int value);
    partial void OngareVinteChanged();
    partial void OncampionatiVintiChanging(int value);
    partial void OncampionatiVintiChanged();
    #endregion
		
		public team()
		{
			this._vettures = new EntitySet<vetture>(new Action<vetture>(this.attach_vettures), new Action<vetture>(this.detach_vettures));
			this._adesionis = new EntitySet<adesioni>(new Action<adesioni>(this.attach_adesionis), new Action<adesioni>(this.detach_adesionis));
			this._contrattis = new EntitySet<contratti>(new Action<contratti>(this.attach_contrattis), new Action<contratti>(this.detach_contrattis));
			this._incarichi_dipendentis = new EntitySet<incarichi_dipendenti>(new Action<incarichi_dipendenti>(this.attach_incarichi_dipendentis), new Action<incarichi_dipendenti>(this.detach_incarichi_dipendentis));
			this._incarichi_pilotis = new EntitySet<incarichi_piloti>(new Action<incarichi_piloti>(this.attach_incarichi_pilotis), new Action<incarichi_piloti>(this.detach_incarichi_pilotis));
			this._mail_teams = new EntitySet<mail_team>(new Action<mail_team>(this.attach_mail_teams), new Action<mail_team>(this.detach_mail_teams));
			this._recapiti_teams = new EntitySet<recapiti_team>(new Action<recapiti_team>(this.attach_recapiti_teams), new Action<recapiti_team>(this.detach_recapiti_teams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTeam", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDTeam
		{
			get
			{
				return this._IDTeam;
			}
			set
			{
				if ((this._IDTeam != value))
				{
					this.OnIDTeamChanging(value);
					this.SendPropertyChanging();
					this._IDTeam = value;
					this.SendPropertyChanged("IDTeam");
					this.OnIDTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sedeCentrale", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sedeCentrale
		{
			get
			{
				return this._sedeCentrale;
			}
			set
			{
				if ((this._sedeCentrale != value))
				{
					this.OnsedeCentraleChanging(value);
					this.SendPropertyChanging();
					this._sedeCentrale = value;
					this.SendPropertyChanged("sedeCentrale");
					this.OnsedeCentraleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataEsordio", DbType="Date NOT NULL")]
		public System.DateTime dataEsordio
		{
			get
			{
				return this._dataEsordio;
			}
			set
			{
				if ((this._dataEsordio != value))
				{
					this.OndataEsordioChanging(value);
					this.SendPropertyChanging();
					this._dataEsordio = value;
					this.SendPropertyChanged("dataEsordio");
					this.OndataEsordioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gareVinte", DbType="Int NOT NULL")]
		public int gareVinte
		{
			get
			{
				return this._gareVinte;
			}
			set
			{
				if ((this._gareVinte != value))
				{
					this.OngareVinteChanging(value);
					this.SendPropertyChanging();
					this._gareVinte = value;
					this.SendPropertyChanged("gareVinte");
					this.OngareVinteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_campionatiVinti", DbType="Int NOT NULL")]
		public int campionatiVinti
		{
			get
			{
				return this._campionatiVinti;
			}
			set
			{
				if ((this._campionatiVinti != value))
				{
					this.OncampionatiVintiChanging(value);
					this.SendPropertyChanging();
					this._campionatiVinti = value;
					this.SendPropertyChanged("campionatiVinti");
					this.OncampionatiVintiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_vetture", Storage="_vettures", ThisKey="IDTeam", OtherKey="IDTeam")]
		public EntitySet<vetture> vettures
		{
			get
			{
				return this._vettures;
			}
			set
			{
				this._vettures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_adesioni", Storage="_adesionis", ThisKey="IDTeam", OtherKey="IDTeam")]
		public EntitySet<adesioni> adesionis
		{
			get
			{
				return this._adesionis;
			}
			set
			{
				this._adesionis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_contratti", Storage="_contrattis", ThisKey="IDTeam", OtherKey="IDTeam")]
		public EntitySet<contratti> contrattis
		{
			get
			{
				return this._contrattis;
			}
			set
			{
				this._contrattis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_incarichi_dipendenti", Storage="_incarichi_dipendentis", ThisKey="IDTeam", OtherKey="IDTeam")]
		public EntitySet<incarichi_dipendenti> incarichi_dipendentis
		{
			get
			{
				return this._incarichi_dipendentis;
			}
			set
			{
				this._incarichi_dipendentis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_incarichi_piloti", Storage="_incarichi_pilotis", ThisKey="IDTeam", OtherKey="IDTeam")]
		public EntitySet<incarichi_piloti> incarichi_pilotis
		{
			get
			{
				return this._incarichi_pilotis;
			}
			set
			{
				this._incarichi_pilotis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_mail_team", Storage="_mail_teams", ThisKey="IDTeam", OtherKey="IDTeam")]
		public EntitySet<mail_team> mail_teams
		{
			get
			{
				return this._mail_teams;
			}
			set
			{
				this._mail_teams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_recapiti_team", Storage="_recapiti_teams", ThisKey="IDTeam", OtherKey="IDTeam")]
		public EntitySet<recapiti_team> recapiti_teams
		{
			get
			{
				return this._recapiti_teams;
			}
			set
			{
				this._recapiti_teams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vettures(vetture entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_vettures(vetture entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_adesionis(adesioni entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_adesionis(adesioni entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_contrattis(contratti entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_contrattis(contratti entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_incarichi_dipendentis(incarichi_dipendenti entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_incarichi_dipendentis(incarichi_dipendenti entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_incarichi_pilotis(incarichi_piloti entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_incarichi_pilotis(incarichi_piloti entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_mail_teams(mail_team entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_mail_teams(mail_team entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
		
		private void attach_recapiti_teams(recapiti_team entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_recapiti_teams(recapiti_team entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
	}
}
#pragma warning restore 1591
